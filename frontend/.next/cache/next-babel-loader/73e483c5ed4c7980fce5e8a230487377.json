{"ast":null,"code":"import _toConsumableArray from \"/Users/moawad/workspace/e-commerce/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/moawad/workspace/e-commerce/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/moawad/workspace/e-commerce/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/moawad/workspace/e-commerce/frontend/src/components/datatable/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { useTable, useSortBy, usePagination, useRowSelect } from 'react-table';\nimport { PageWithText } from '../pagination';\nimport { FiChevronDown, FiChevronUp } from 'react-icons/fi';\nvar IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var indeterminate = _ref.indeterminate,\n      rest = _objectWithoutProperties(_ref, [\"indeterminate\"]);\n\n  var defaultRef = React.useRef();\n  var resolvedRef = ref || defaultRef;\n  useEffect(function () {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n    type: \"checkbox\",\n    ref: resolvedRef\n  }, rest), {}, {\n    className: \"form-checkbox h-4 w-4\"\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, _this);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n_c2 = IndeterminateCheckbox;\n\nvar Datatable = function Datatable(_ref2) {\n  _s2();\n\n  var columns = _ref2.columns,\n      data = _ref2.data;\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 10\n    }\n  }, useSortBy, usePagination, useRowSelect, function (hooks) {\n    hooks.visibleColumns.push(function (columns) {\n      return [// Let's make a column for selection\n      {\n        id: 'selection',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: function Header(_ref3) {\n          var getToggleAllRowsSelectedProps = _ref3.getToggleAllRowsSelectedProps;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, getToggleAllRowsSelectedProps()), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false);\n        },\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: function Cell(_ref4) {\n          var row = _ref4.row;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, row.getToggleRowSelectedProps()), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false);\n        }\n      }].concat(_toConsumableArray(columns));\n    });\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize,\n      selectedRowIds = _useTable$state.selectedRowIds;\n\n  useEffect(function () {\n    //callback goes here to get selected row ids\n    console.log(JSON.stringify(selectedRowIds, null, 2));\n    console.log(JSON.stringify(data.filter(function (item, index) {\n      return Object.keys(selectedRowIds).map(function (i) {\n        return parseInt(i, 10);\n      }).includes(index);\n    }), null, 2));\n  }, [selectedRowIds]); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps(column.getSortByToggleProps())), {}, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-row items-center justify-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: column.render('Header')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 37\n                  }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-auto\",\n                    children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FiChevronDown, {\n                      className: \"stroke-current text-2xs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 31\n                    }, _this) : /*#__PURE__*/_jsxDEV(FiChevronUp, {\n                      className: \"stroke-current text-2xs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 31\n                    }, _this) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 37\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 33\n                }, _this)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map(function (row, i) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.render('Cell')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 40\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center justify-between my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap items-center justify-start space-x-2 pagination\",\n        children: [pageIndex !== 0 && /*#__PURE__*/_jsxDEV(PageWithText, {\n          onClick: function onClick() {\n            return gotoPage(0);\n          },\n          children: \"First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, _this), canPreviousPage && /*#__PURE__*/_jsxDEV(PageWithText, {\n          onClick: function onClick() {\n            return previousPage();\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, _this), canNextPage && /*#__PURE__*/_jsxDEV(PageWithText, {\n          onClick: function onClick() {\n            return nextPage();\n          },\n          disabled: !canNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, _this), pageIndex !== pageCount - 1 && /*#__PURE__*/_jsxDEV(PageWithText, {\n          onClick: function onClick() {\n            return gotoPage(pageCount - 1);\n          },\n          disabled: !canNextPage,\n          children: \"Last\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 32\n        }, _this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select text-sm bg-white dark:bg-gray-800 dark:border-gray-800 outline-none shadow-none focus:shadow-none\",\n        value: pageSize,\n        onChange: function onChange(e) {\n          setPageSize(Number(e.target.value));\n        },\n        children: [10, 25, 50, 100].map(function (pageSize) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s2(Datatable, \"BlDNkFJdTcj8nNTYA/XBVzpjZmk=\", false, function () {\n  return [useTable];\n});\n\n_c3 = Datatable;\nexport default Datatable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndeterminateCheckbox$React.forwardRef\");\n$RefreshReg$(_c2, \"IndeterminateCheckbox\");\n$RefreshReg$(_c3, \"Datatable\");","map":{"version":3,"sources":["/Users/moawad/workspace/e-commerce/frontend/src/components/datatable/index.tsx"],"names":["React","useEffect","useTable","useSortBy","usePagination","useRowSelect","PageWithText","FiChevronDown","FiChevronUp","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","Datatable","columns","data","initialState","pageIndex","pageSize","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","selectedRowIds","console","log","JSON","stringify","filter","item","index","Object","keys","map","i","parseInt","includes","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","length","e","Number","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {useTable, useSortBy, usePagination, useRowSelect} from 'react-table'\nimport {PageWithText} from '../pagination'\nimport {FiChevronDown, FiChevronUp} from 'react-icons/fi'\n\nconst IndeterminateCheckbox = React.forwardRef(\n    ({indeterminate, ...rest}, ref) => {\n        const defaultRef = React.useRef()\n        const resolvedRef = ref || defaultRef\n\n        useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate\n        }, [resolvedRef, indeterminate])\n\n        return (\n            <input\n                type=\"checkbox\"\n                ref={resolvedRef}\n                {...rest}\n                className=\"form-checkbox h-4 w-4\"\n            />\n        )\n    }\n)\n\nconst Datatable = ({columns, data}) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: {pageIndex, pageSize, selectedRowIds}\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: {pageIndex: 0, pageSize: 10}\n        },\n        useSortBy,\n        usePagination,\n        useRowSelect,\n        (hooks) => {\n            hooks.visibleColumns.push((columns) => [\n                // Let's make a column for selection\n                {\n                    id: 'selection',\n                    // The header can use the table's getToggleAllRowsSelectedProps method\n                    // to render a checkbox\n                    Header: ({getToggleAllRowsSelectedProps}) => (\n                        <>\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n                        </>\n                    ),\n                    // The cell can use the individual row's getToggleRowSelectedProps method\n                    // to the render a checkbox\n                    Cell: ({row}) => (\n                        <>\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                        </>\n                    )\n                },\n                ...columns\n            ])\n        }\n    )\n\n    useEffect(() => {\n        //callback goes here to get selected row ids\n        console.log(JSON.stringify(selectedRowIds, null, 2))\n        console.log(\n            JSON.stringify(\n                data.filter((item, index) =>\n                    Object.keys(selectedRowIds)\n                        .map((i) => parseInt(i, 10))\n                        .includes(index)\n                ),\n                null,\n                2\n            )\n        )\n    }, [selectedRowIds])\n\n    // Render the UI for your table\n    return (\n        <>\n            <table {...getTableProps()} className=\"table\">\n                <thead>\n                {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                <div className=\"flex flex-row items-center justify-start\">\n                                    <span>{column.render('Header')}</span>\n                                    {/* Add a sort direction indicator */}\n                                    <span className=\"ml-auto\">\n                      {column.isSorted ? (\n                          column.isSortedDesc ? (\n                              <FiChevronDown className=\"stroke-current text-2xs\"/>\n                          ) : (\n                              <FiChevronUp className=\"stroke-current text-2xs\"/>\n                          )\n                      ) : (\n                          ''\n                      )}\n                    </span>\n                                </div>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n\n            <div className=\"flex flex-row items-center justify-between my-4\">\n                <div className=\"flex flex-wrap items-center justify-start space-x-2 pagination\">\n                    {pageIndex !== 0 && (\n                        <PageWithText onClick={() => gotoPage(0)}>First</PageWithText>\n                    )}\n                    {canPreviousPage && (\n                        <PageWithText onClick={() => previousPage()}>Previous</PageWithText>\n                    )}\n                    {canNextPage && (\n                        <PageWithText onClick={() => nextPage()} disabled={!canNextPage}>\n                            Next\n                        </PageWithText>\n                    )}\n                    {pageIndex !== pageCount - 1 && (\n                        <PageWithText\n                            onClick={() => gotoPage(pageCount - 1)}\n                            disabled={!canNextPage}>\n                            Last\n                        </PageWithText>\n                    )}\n                </div>\n\n                <span>Page{' '}<b>{pageIndex + 1} of {pageOptions.length}</b>{' '}</span>\n                <select\n                    className=\"form-select text-sm bg-white dark:bg-gray-800 dark:border-gray-800 outline-none shadow-none focus:shadow-none\"\n                    value={pageSize}\n                    onChange={(e) => {\n                        setPageSize(Number(e.target.value))\n                    }}>\n                    {[10, 25, 50, 100].map((pageSize) => (\n                        <option key={pageSize} value={pageSize}>\n                            Show {pageSize}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </>\n    )\n}\n\nexport default Datatable\n"]},"metadata":{},"sourceType":"module"}