{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moawad/workspace/e-commerce/frontend/src/components/left-sidebar/item.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { FiChevronRight } from 'react-icons/fi';\n\nconst Item = ({\n  url,\n  icon,\n  title,\n  badge,\n  items\n}) => {\n  const {\n    0: hidden,\n    1: setHidden\n  } = useState(true);\n  const router = useRouter();\n\n  let {\n    pathname\n  } = _objectSpread({}, router);\n\n  let active = pathname === url ? true : false;\n\n  if (pathname === '/' && url === '/dashboard') {\n    active = true;\n  }\n\n  if (pathname === '/' && url !== '/dashboard') {\n    active = false;\n  }\n\n  if (items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      href: url,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: `left-sidebar-item ${active ? 'active' : ''}`,\n        children: [icon, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), badge && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `badge badge-circle badge-sm ${badge.color}`,\n          children: badge.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setHidden(!hidden),\n    className: `left-sidebar-item ${active ? 'active' : ''} ${hidden ? 'hidden-sibling' : 'open-sibling'}`,\n    children: [icon, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), badge && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `badge badge-circle badge-sm ${badge.color}`,\n      children: badge.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n      className: \"ml-auto arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/moawad/workspace/e-commerce/frontend/src/components/left-sidebar/item.tsx"],"names":["React","useState","useRouter","Link","FiChevronRight","Item","url","icon","title","badge","items","hidden","setHidden","router","pathname","active","length","color","text"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAAsC;AACjD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMY,MAAM,GAAGX,SAAS,EAAxB;;AACA,MAAI;AAACY,IAAAA;AAAD,wBAAiBD,MAAjB,CAAJ;;AACA,MAAIE,MAAM,GAAGD,QAAQ,KAAKR,GAAb,GAAmB,IAAnB,GAA0B,KAAvC;;AACA,MAAIQ,QAAQ,KAAK,GAAb,IAAoBR,GAAG,KAAK,YAAhC,EAA8C;AAC5CS,IAAAA,MAAM,GAAG,IAAT;AACD;;AACD,MAAID,QAAQ,KAAK,GAAb,IAAoBR,GAAG,KAAK,YAAhC,EAA8C;AAC5CS,IAAAA,MAAM,GAAG,KAAT;AACD;;AACD,MAAIL,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtB,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEV,GAAZ;AAAA,6BACE;AAAG,QAAA,SAAS,EAAG,qBAAoBS,MAAM,GAAG,QAAH,GAAc,EAAG,EAA1D;AAAA,mBACGR,IADH,eAEE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,oBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGC,KAAK,iBACJ;AAAM,UAAA,SAAS,EAAG,+BAA8BA,KAAK,CAACQ,KAAM,EAA5D;AAAA,oBACGR,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AACD,sBACE;AACE,IAAA,OAAO,EAAE,MAAMN,SAAS,CAAC,CAACD,MAAF,CAD1B;AAEE,IAAA,SAAS,EAAG,qBAAoBI,MAAM,GAAG,QAAH,GAAc,EAAG,IACrDJ,MAAM,GAAG,gBAAH,GAAsB,cAC7B,EAJH;AAAA,eAKGJ,IALH,eAME;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,gBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,YANF,EAOGC,KAAK,iBACJ;AAAM,MAAA,SAAS,EAAG,+BAA8BA,KAAK,CAACQ,KAAM,EAA5D;AAAA,gBACGR,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,YARJ,eAYE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1CD;;AA4CA,eAAeb,IAAf","sourcesContent":["import React, {useState} from 'react'\nimport {useRouter} from 'next/router'\nimport Link from 'next/link'\nimport {FiChevronRight} from 'react-icons/fi'\n\nconst Item = ({url, icon, title, badge, items}) => {\n  const [hidden, setHidden] = useState(true)\n  const router = useRouter()\n  let {pathname} = {...router}\n  let active = pathname === url ? true : false\n  if (pathname === '/' && url === '/dashboard') {\n    active = true\n  }\n  if (pathname === '/' && url !== '/dashboard') {\n    active = false\n  }\n  if (items.length === 0) {\n    return (\n      <Link href={url}>\n        <a className={`left-sidebar-item ${active ? 'active' : ''}`}>\n          {icon}\n          <span className=\"title\">{title}</span>\n          {badge && (\n            <span className={`badge badge-circle badge-sm ${badge.color}`}>\n              {badge.text}\n            </span>\n          )}\n        </a>\n      </Link>\n    )\n  }\n  return (\n    <button\n      onClick={() => setHidden(!hidden)}\n      className={`left-sidebar-item ${active ? 'active' : ''} ${\n        hidden ? 'hidden-sibling' : 'open-sibling'\n      }`}>\n      {icon}\n      <span className=\"title\">{title}</span>\n      {badge && (\n        <span className={`badge badge-circle badge-sm ${badge.color}`}>\n          {badge.text}\n        </span>\n      )}\n      <FiChevronRight className=\"ml-auto arrow\" />\n    </button>\n  )\n}\n\nexport default Item\n"]},"metadata":{},"sourceType":"module"}