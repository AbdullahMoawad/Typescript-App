{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moawad/workspace/e-commerce/frontend/src/components/forms/validation.tsx\";\nimport { useForm } from 'react-hook-form';\nimport Alert from '../alerts';\nimport React from \"react\";\n\nconst FormValidation = ({\n  items,\n  onSubmit,\n  alerts\n}) => {\n  const {\n    handleSubmit,\n    errors,\n    register\n  } = useForm();\n  console.log(handleSubmit, \"------------------\");\n\n  const onSubmitFn = data => {\n    if (onSubmit) {\n      onSubmit(data);\n    }\n  };\n\n  items = items.map(item => {\n    item['ref'] = register(item['error']);\n    return item;\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmitFn),\n    className: \"form flex flex-wrap w-full\",\n    children: [alerts && items.map((item, i) => {\n      if (!errors[item.name]) return null;\n      let msg = errors[item.name].message;\n      if (msg.length === 0) msg = `${item.label} is required`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-full\",\n        children: errors[item.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"bg-transparent border-red-500 text-red-500\",\n            borderLeft: true,\n            raised: true,\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: items.map((item, i) => {\n        if (item.type === 'checkbox') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [item.label && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-label\",\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-start space-x-2\",\n              children: item.options.map((option, j) => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center justify-start space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: item.ref,\n                  type: \"checkbox\",\n                  value: option.value,\n                  name: item.name,\n                  className: `form-checkbox h-4 w-4 ${errors[item.name] ? 'text-red-500' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${errors[item.name] ? 'text-red-500' : ''}`,\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        }\n\n        if (item.type === 'radio') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [item.label && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-label\",\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-start space-x-2\",\n              children: item.options.map((option, j) => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center justify-start space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: option.value,\n                  name: item.name,\n                  ref: register({\n                    required: true\n                  }),\n                  className: `form-radio h-4 w-4 ${errors[item.name] ? 'text-red-500' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${errors[item.name] ? 'text-red-500' : ''}`,\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this);\n        }\n\n        if (item.type === 'select') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [item.label && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-label\",\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ref: item.ref,\n              name: item.name,\n              className: `form-select ${errors[item.name] ? 'border border-red-500' : ''}`,\n              children: item.options.map((option, j) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), !alerts && errors[item.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors[item.name].message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this);\n        }\n\n        if (item.type === 'textarea') {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-element\",\n              children: [item.label && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-label\",\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 52\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: item.ref,\n                name: item.name,\n                className: `form-textarea ${errors[item.name] ? 'border border-red-500' : ''}`,\n                rows: 3,\n                placeholder: item.placeholder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), !alerts && errors[item.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-error\",\n                children: errors[item.name].message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)\n          }, void 0, false);\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [item.label && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-label\",\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: item.ref,\n              name: item.name,\n              type: item.type,\n              className: `form-input ${errors[item.name] ? 'border-red-500' : ''}`,\n              placeholder: item.placeholder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), !alerts && errors[item.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors[item.name].message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-default bg-blue-500 hover:bg-blue-600 text-white btn-rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\nexport default FormValidation;","map":{"version":3,"sources":["/Users/moawad/workspace/e-commerce/frontend/src/components/forms/validation.tsx"],"names":["useForm","Alert","React","FormValidation","items","onSubmit","alerts","handleSubmit","errors","register","console","log","onSubmitFn","data","map","item","i","name","msg","message","length","label","type","options","option","j","ref","value","required","placeholder"],"mappings":"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","sourcesContent":["import {useForm} from 'react-hook-form'\nimport Alert from '../alerts'\nimport React from \"react\";\n\nconst FormValidation = ({items, onSubmit, alerts}) => {\n    const {handleSubmit, errors, register} = useForm()\n\n    console.log(handleSubmit,\"------------------\")\n\n    const onSubmitFn = data => {\n        if (onSubmit) {\n            onSubmit(data)\n        }\n    }\n    items = items.map(item => {\n        item['ref'] = register(item['error'])\n        return item\n    })\n\n    return (\n        <form\n            onSubmit={handleSubmit(onSubmitFn)}\n            className=\"form flex flex-wrap w-full\">\n            {alerts &&\n            items.map((item, i) => {\n                if (!errors[item.name]) return null\n                let msg = errors[item.name].message\n                if (msg.length === 0) msg = `${item.label} is required`\n                return (\n                    <div className=\"flex flex-col w-full\">\n                        {errors[item.name] && (\n                            <div className=\"mb-2\" key={i}>\n                                <Alert\n                                    color=\"bg-transparent border-red-500 text-red-500\"\n                                    borderLeft\n                                    raised>\n                                    {msg}\n                                </Alert>\n                            </div>\n                        )}\n                    </div>\n                )\n            })}\n            <div className=\"w-full\">\n                {items.map((item, i) => {\n                    if (item.type === 'checkbox') {\n                        return (\n                            <div className=\"form-element\">\n                                {item.label && <div className=\"form-label\">{item.label}</div>}\n                                <div className=\"flex items-center justify-start space-x-2\">\n                                    {item.options.map((option, j) => (\n                                        <label className=\"flex items-center justify-start space-x-2\">\n                                            <input\n                                                ref={item.ref}\n                                                type=\"checkbox\"\n                                                value={option.value}\n                                                name={item.name}\n                                                className={`form-checkbox h-4 w-4 ${\n                                                    errors[item.name] ? 'text-red-500' : ''\n                                                }`}\n                                            />\n                                            <span\n                                                className={`${\n                                                    errors[item.name] ? 'text-red-500' : ''\n                                                }`}>\n                                            {option.label}\n                                            </span>\n                                        </label>\n                                    ))}\n                                </div>\n                            </div>\n                        )\n                    }\n                    if (item.type === 'radio') {\n                        return (\n                            <div className=\"form-element\">\n                                {item.label && <div className=\"form-label\">{item.label}</div>}\n                                <div className=\"flex items-center justify-start space-x-2\">\n                                    {item.options.map((option, j) => (\n                                        <label className=\"flex items-center justify-start space-x-2\">\n                                            <input\n                                                type=\"radio\"\n                                                value={option.value}\n                                                name={item.name}\n                                                ref={register({required: true})}\n                                                className={`form-radio h-4 w-4 ${\n                                                    errors[item.name] ? 'text-red-500' : ''\n                                                }`}\n                                            />\n                                            <span\n                                                className={`${\n                                                    errors[item.name] ? 'text-red-500' : ''\n                                                }`}>\n                        {option.label}\n                      </span>\n                                        </label>\n                                    ))}\n                                </div>\n                            </div>\n                        )\n                    }\n                    if (item.type === 'select') {\n                        return (\n                            <div className=\"form-element\">\n                                {item.label && <div className=\"form-label\">{item.label}</div>}\n                                <select\n                                    ref={item.ref}\n                                    name={item.name}\n                                    className={`form-select ${\n                                        errors[item.name] ? 'border border-red-500' : ''\n                                    }`}>\n                                    {item.options.map((option, j) => (\n                                        <option key={j} value={option.value}>\n                                            {option.label}\n                                        </option>\n                                    ))}\n                                </select>\n                                {!alerts && errors[item.name] && (\n                                    <div className=\"form-error\">{errors[item.name].message}</div>\n                                )}\n                            </div>\n                        )\n                    }\n                    if (item.type === 'textarea') {\n                        return (\n                            <>\n                                <div className=\"form-element\">\n                                    {item.label && <div className=\"form-label\">{item.label}</div>}\n                                    <textarea\n                                        ref={item.ref}\n                                        name={item.name}\n                                        className={`form-textarea ${\n                                            errors[item.name] ? 'border border-red-500' : ''\n                                        }`}\n                                        rows={3}\n                                        placeholder={item.placeholder}/>\n                                    {!alerts && errors[item.name] && (\n                                        <div className=\"form-error\">\n                                            {errors[item.name].message}\n                                        </div>\n                                    )}\n                                </div>\n                            </>\n                        )\n                    }\n                    return (\n                        <>\n                            <div className=\"form-element\">\n                                {item.label && <div className=\"form-label\">{item.label}</div>}\n                                <input\n                                    ref={item.ref}\n                                    name={item.name}\n                                    type={item.type}\n                                    className={`form-input ${\n                                        errors[item.name] ? 'border-red-500' : ''\n                                    }`}\n                                    placeholder={item.placeholder}\n                                />\n                                {!alerts && errors[item.name] && (\n                                    <div className=\"form-error\">{errors[item.name].message}</div>\n                                )}\n                            </div>\n                        </>\n                    )\n                })}\n            </div>\n            <input\n                type=\"submit\"\n                className=\"btn btn-default bg-blue-500 hover:bg-blue-600 text-white btn-rounded\"\n            />\n        </form>\n    )\n}\nexport default FormValidation\n"]},"metadata":{},"sourceType":"module"}