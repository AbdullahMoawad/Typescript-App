{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moawad/workspace/e-commerce/frontend/src/components/forms/create-account.tsx\";\nimport React, { useState } from 'react';\nimport Validation from '../forms/validation';\nimport Alert from '../alerts';\nimport { axiosInstance } from \"../../util/axios\";\nimport { useRouter } from \"next/router\";\n\nconst CreateAccount = ({\n  message = null\n}, props) => {\n  const {\n    0: errorSummery,\n    1: setErrorSummry\n  } = useState(null);\n  const router = useRouter();\n\n  let onSubmit = async values => {\n    await axiosInstance.post('/user', values).then(function (response) {\n      console.log(response.data, \"0-------response------\");\n      router.push(`/login`);\n    }).catch(function (error) {\n      console.log(error, \"0-------error------\");\n      setErrorSummry(error.message);\n      console.log(error);\n    });\n  };\n\n  let items = [{\n    label: 'User Name',\n    error: {\n      required: 'Please enter a valid username'\n    },\n    name: 'userName',\n    type: 'text',\n    placeholder: 'Enter you username'\n  }, {\n    label: 'First Name',\n    error: {\n      required: 'Please enter a valid first name'\n    },\n    name: 'firstName',\n    type: 'text',\n    placeholder: 'Enter you first name'\n  }, {\n    label: 'Last Name',\n    error: {\n      required: 'Please enter a valid last name'\n    },\n    name: 'lastName',\n    type: 'text',\n    placeholder: 'Enter you last name'\n  }, {\n    label: 'Email',\n    error: {\n      required: 'Please enter a valid email'\n    },\n    name: 'email',\n    type: 'email',\n    placeholder: 'Enter you email'\n  }, {\n    label: 'Password',\n    error: {\n      required: 'Password is required',\n      minLength: {\n        value: 8,\n        message: 'Your password should have at least 4 characters'\n      },\n      maxLength: {\n        value: 50,\n        message: 'Your password should have no more than 8 characters'\n      }\n    },\n    name: 'password',\n    type: 'password',\n    placeholder: 'Enter your password'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: [errorSummery && message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"bg-transparent border-red-500 text-red-500\",\n          borderLeft: true,\n          raised: true,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Validation, {\n        items: items,\n        onSubmit: onSubmit,\n        alerts: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport default CreateAccount;","map":{"version":3,"sources":["/Users/moawad/workspace/e-commerce/frontend/src/components/forms/create-account.tsx"],"names":["React","useState","Validation","Alert","axiosInstance","useRouter","CreateAccount","message","props","errorSummery","setErrorSummry","router","onSubmit","values","post","then","response","console","log","data","push","catch","error","items","label","required","name","type","placeholder","minLength","value","maxLength"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Validation from '../forms/validation'\nimport Alert from '../alerts'\nimport {axiosInstance, getConfig} from \"../../util/axios\";\nimport {useRouter} from \"next/router\";\n\nconst CreateAccount = ({message = null}, props: any) => {\n    const [errorSummery,setErrorSummry] = useState(null)\n    const router = useRouter();\n\n    let onSubmit = async (values) => {\n\n        await axiosInstance.post('/user', values)\n            .then(function (response) {\n                console.log(response.data,\"0-------response------\")\n                router.push(`/login`);\n            })\n            .catch(function (error) {\n                console.log(error,\"0-------error------\")\n\n                setErrorSummry(error.message)\n                console.log(error);\n            });\n    };\n\n    let items = [\n        {\n            label: 'User Name',\n            error: {required: 'Please enter a valid username'},\n            name: 'userName',\n            type: 'text',\n            placeholder: 'Enter you username'\n        },\n        {\n            label: 'First Name',\n            error: {required: 'Please enter a valid first name'},\n            name: 'firstName',\n            type: 'text',\n            placeholder: 'Enter you first name'\n        },\n        {\n            label: 'Last Name',\n            error: {required: 'Please enter a valid last name'},\n            name: 'lastName',\n            type: 'text',\n            placeholder: 'Enter you last name'\n        },\n        {\n            label: 'Email',\n            error: {required: 'Please enter a valid email'},\n            name: 'email',\n            type: 'email',\n            placeholder: 'Enter you email'\n        },\n        {\n            label: 'Password',\n            error: {\n                required: 'Password is required',\n                minLength: {\n                    value: 8,\n                    message: 'Your password should have at least 4 characters'\n                },\n                maxLength: {\n                    value: 50,\n                    message: 'Your password should have no more than 8 characters'\n                }\n            },\n            name: 'password',\n            type: 'password',\n            placeholder: 'Enter your password'\n        },\n    ]\n    return (\n        <>\n            <div className=\"flex flex-col\">\n                {errorSummery && message && (\n                    <div className=\"w-full mb-4\">\n                        <Alert\n                            color=\"bg-transparent border-red-500 text-red-500\"\n                            borderLeft\n                            raised>\n                            {message}\n                        </Alert>\n                    </div>\n                )}\n                <Validation items={items} onSubmit={onSubmit} alerts={onSubmit}/>\n            </div>\n        </>\n    )\n}\n\nexport default CreateAccount\n"]},"metadata":{},"sourceType":"module"}