{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/moawad/workspace/e-commerce/frontend/src/components/sample-forms/account-settings.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Validation from '../forms/validation';\nimport Alert from '../alerts';\nimport { useRouter } from \"next/router\";\nexport default function AccountSettings(props, _ref) {\n  _s();\n\n  var _ref$message = _ref.message,\n      message = _ref$message === void 0 ? null : _ref$message;\n\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var router = useRouter();\n  var user = props.user;\n  console.log(user, \"----user--------\");\n  var items = [{\n    label: 'First name',\n    error: {\n      required: 'Please enter a valid first name'\n    },\n    name: 'first-name',\n    type: 'text',\n    placeholder: 'Enter you first name'\n  }, {\n    label: 'Last name',\n    error: {\n      required: 'Please enter a valid last name'\n    },\n    name: 'last-name',\n    type: 'text',\n    placeholder: 'Enter you last name'\n  }, {\n    label: 'Email address',\n    error: {\n      required: 'Please enter a valid email address'\n    },\n    name: 'email',\n    type: 'email',\n    placeholder: 'Enter you email address'\n  }, {\n    label: 'Company',\n    error: {\n      required: 'Please enter a valid company'\n    },\n    name: 'company',\n    type: 'text',\n    placeholder: 'Enter you company'\n  }, {\n    label: 'Position',\n    error: {\n      required: 'Please enter a valid position'\n    },\n    name: 'position',\n    type: 'text',\n    placeholder: 'Enter you position'\n  }, {\n    label: 'Language',\n    error: {\n      required: 'Language is required',\n      validate: function validate(value) {\n        return ['english', 'spanish', 'portuguese'].includes(value) || 'Language is required';\n      }\n    },\n    name: 'language',\n    type: 'select',\n    options: [{\n      value: null,\n      label: 'Select language'\n    }, {\n      value: 'english',\n      label: 'English'\n    }, {\n      value: 'spanish',\n      label: 'Spanish'\n    }, {\n      value: 'portuguese',\n      label: 'Portuguese'\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: [data && message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"bg-transparent border-green-500 text-green-500\",\n          borderLeft: true,\n          raised: true,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Validation, {\n        items: items,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AccountSettings, \"QrxVdvChjMqT3F7byoi15dh57jQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = AccountSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettings\");","map":{"version":3,"sources":["/Users/moawad/workspace/e-commerce/frontend/src/components/sample-forms/account-settings.tsx"],"names":["React","useState","Validation","Alert","useRouter","AccountSettings","props","message","data","setData","router","user","console","log","items","label","error","required","name","type","placeholder","validate","value","includes","options","onSubmit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,QAAiD;AAAA;;AAAA,0BAAjBC,OAAiB;AAAA,MAAjBA,OAAiB,6BAAP,IAAO;;AAAA,kBACtCN,QAAQ,CAAC,IAAD,CAD8B;AAAA,MACvDO,IADuD;AAAA,MACjDC,OADiD;;AAE9D,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAF8D,MAGvDO,IAHuD,GAG/CL,KAH+C,CAGvDK,IAHuD;AAI9DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAiB,kBAAjB;AAGA,MAAIG,KAAK,GAAG,CACV;AACEC,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAFT;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE,MAJR;AAKEC,IAAAA,WAAW,EAAE;AALf,GADU,EAQV;AACEL,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAFT;AAGEC,IAAAA,IAAI,EAAE,WAHR;AAIEC,IAAAA,IAAI,EAAE,MAJR;AAKEC,IAAAA,WAAW,EAAE;AALf,GARU,EAeV;AACEL,IAAAA,KAAK,EAAE,eADT;AAEEC,IAAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAFT;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE,OAJR;AAKEC,IAAAA,WAAW,EAAE;AALf,GAfU,EAsBV;AACEL,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAFT;AAGEC,IAAAA,IAAI,EAAE,SAHR;AAIEC,IAAAA,IAAI,EAAE,MAJR;AAKEC,IAAAA,WAAW,EAAE;AALf,GAtBU,EA6BV;AACEL,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAFT;AAGEC,IAAAA,IAAI,EAAE,UAHR;AAIEC,IAAAA,IAAI,EAAE,MAJR;AAKEC,IAAAA,WAAW,EAAE;AALf,GA7BU,EAoCV;AACEL,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,sBADL;AAELI,MAAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,eACb,CAAC,SAAD,EAAY,SAAZ,EAAuB,YAAvB,EAAqCC,QAArC,CAA8CD,KAA9C,KACA,sBAFa;AAAA;AAFV,KAFT;AAQEJ,IAAAA,IAAI,EAAE,UARR;AASEC,IAAAA,IAAI,EAAE,QATR;AAUEK,IAAAA,OAAO,EAAE,CACP;AAACF,MAAAA,KAAK,EAAE,IAAR;AAAcP,MAAAA,KAAK,EAAE;AAArB,KADO,EAEP;AAACO,MAAAA,KAAK,EAAE,SAAR;AAAmBP,MAAAA,KAAK,EAAE;AAA1B,KAFO,EAGP;AAACO,MAAAA,KAAK,EAAE,SAAR;AAAmBP,MAAAA,KAAK,EAAE;AAA1B,KAHO,EAIP;AAACO,MAAAA,KAAK,EAAE,YAAR;AAAsBP,MAAAA,KAAK,EAAE;AAA7B,KAJO;AAVX,GApCU,CAAZ;AAsDA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACGP,IAAI,IAAID,OAAR,iBACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,gDADR;AAEE,UAAA,UAAU,MAFZ;AAGE,UAAA,MAAM,MAHR;AAAA,oBAIGA;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEO,KAAnB;AAA0B,QAAA,QAAQ,EAAEW;AAApC;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD;;GA9EuBpB,e;UAEPD,S;;;KAFOC,e","sourcesContent":["import React, {useState} from 'react'\nimport Validation from '../forms/validation'\nimport Alert from '../alerts'\nimport {useRouter} from \"next/router\";\nimport {axiosInstance} from \"../../util/axios\";\n\nexport default function AccountSettings(props,{message = null}) {\n  const [data, setData] = useState(null)\n  const router = useRouter();\n  const {user} = props;\n  console.log(user,\"----user--------\")\n\n\n  let items = [\n    {\n      label: 'First name',\n      error: {required: 'Please enter a valid first name'},\n      name: 'first-name',\n      type: 'text',\n      placeholder: 'Enter you first name'\n    },\n    {\n      label: 'Last name',\n      error: {required: 'Please enter a valid last name'},\n      name: 'last-name',\n      type: 'text',\n      placeholder: 'Enter you last name'\n    },\n    {\n      label: 'Email address',\n      error: {required: 'Please enter a valid email address'},\n      name: 'email',\n      type: 'email',\n      placeholder: 'Enter you email address'\n    },\n    {\n      label: 'Company',\n      error: {required: 'Please enter a valid company'},\n      name: 'company',\n      type: 'text',\n      placeholder: 'Enter you company'\n    },\n    {\n      label: 'Position',\n      error: {required: 'Please enter a valid position'},\n      name: 'position',\n      type: 'text',\n      placeholder: 'Enter you position'\n    },\n    {\n      label: 'Language',\n      error: {\n        required: 'Language is required',\n        validate: value =>\n          ['english', 'spanish', 'portuguese'].includes(value) ||\n          'Language is required'\n      },\n      name: 'language',\n      type: 'select',\n      options: [\n        {value: null, label: 'Select language'},\n        {value: 'english', label: 'English'},\n        {value: 'spanish', label: 'Spanish'},\n        {value: 'portuguese', label: 'Portuguese'}\n      ]\n    }\n  ]\n  return (\n    <>\n      <div className=\"flex flex-col\">\n        {data && message && (\n          <div className=\"w-full mb-4\">\n            <Alert\n              color=\"bg-transparent border-green-500 text-green-500\"\n              borderLeft\n              raised>\n              {message}\n            </Alert>\n          </div>\n        )}\n        <Validation items={items} onSubmit={onSubmit} />\n      </div>\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}