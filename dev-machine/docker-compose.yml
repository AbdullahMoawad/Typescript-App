version: "3.2"

services:

  mongodb:
    image: 'mongo'
    container_name: 'EC-Mongo'
    environment:
      MONGO_INITDB_ROOT_DATABASE: localapp
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-volume:/data/db
    ports:
      - "27117:27017"
    restart: always
    networks:
      - ec-proxy

  #  es01:
  #    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
  #    container_name: 'EC-Elasticsearch'
  #    environment:
  #      - node.name=es01
  #      - cluster.name=es-docker-cluster
  #      - discovery.seed_hosts=es02,es03
  #      - cluster.initial_master_nodes=es01
  #      - bootstrap.memory_lock=true
  #      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #    ulimits:
  #      memlock:
  #        soft: -1
  #        hard: -1
  #    volumes:
  #      - data01:/usr/share/elasticsearch/data
  #    ports:
  #      - 9200:9200
  #    networks:
  #      - ec-proxy

  rabbitmq:
    container_name: 'EC-RabbitMQ'
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "pass"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always
    networks:
      - ec-proxy

  redis:
    container_name: EC-Redis
    image: redis
    volumes:
      - ./data/config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    restart: always


volumes:
  db_data: { }
  data01:
    driver: local

networks:
  ec-proxy:
    external:
      name: ec_network
