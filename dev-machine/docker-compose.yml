version: "3.2"

services:

  mongodb:
    image: 'mongo'
    container_name: 'ec-mongodb'
    environment:
      MONGO_INITDB_ROOT_DATABASE: localapp
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-volume:/data/db
    ports:
      - "27117:27017"
    restart: always

  rabbitmq:
    container_name: 'EC-RabbitMQ'
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "pass"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always


  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    container_name: ec-traefik

    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock



  redis:
    container_name: ec-redis
    image: redis
    volumes:
      - ./data/config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    restart: always


volumes:
  db_data: { }
  data01:
    driver: local

